extends Node

class_name ToolTips

const selected_lang = "english"

const tool_tips_english = {
	#arc_angle_1_ctrl_hint_tooltip = "Start angle of the arc.",
	#arc_angle_2_ctrl_hint_tooltip = "End angle of the arc. If angle2 and angle1 are the same,\na closed ellipse is the result, which is the default.",
#	arc_make_wire_ctrl_hint_tooltip = "Convert the resulting edge to a wire.",
#	arc_rotation_angle_ctrl_hint_tooltip = "Angle to rotate the created ellipse/arc by.",
#	arc_sense_ctrl_hint_tooltip = "Clockwise (-1) or counter clockwise (1).",
#	arc_start_at_current_ctrl_hint_tooltip = "If checked, the start point of arc is moved to current point.\nIf unchecked, the center of arc is on current point.",
#	arc_x_radius_ctrl_hint_tooltip = "X radius of the ellipse (along the x-axis of plane\nthe ellipse should lie in).",
#	arc_y_radius_ctrl_hint_tooltip = "Y radius of the ellipse (along the y-axis of plane\nthe ellipse should lie in).",
#	box_length_ctrl_hint_tooltip = "Box size in X direction.",
#	box_width_ctrl_hint_tooltip = "Box size in Y direction.",
#	box_height_ctrl_hint_tooltip = "Box size in Z direction.",
#	blind_cut_distance_ctrl_hint_tooltip = "Distance to extrude before cutting (> 0.0 means in the positive direction of the workplane normal, < 0.0 means in the negative direction).",
#	cbore_cbore_dia_ctrl_hint_tooltip = "Diameter of the counter-bore hole. This diameter\nshould be larger than that of the main hole.",
#	cbore_cbore_depth_ctrl_hint_tooltip = "Depth of the counter-bore hole. This depth should be\nless than that of the main hole.",
#	cen_x_ctrl_hint_tooltip = "If checked, will be centered around the X axis reference point.\nIf unchecked, the corner will be on the reference point and it\nwill extend in the positive x direction.",
#	cen_y_ctrl_hint_tooltip = "If checked, will be centered around the Y axis reference point.\nIf unchecked, the corner will be on the reference point and it\nwill extend in the positive y direction.",
#	cen_z_ctrl_hint_tooltip = "If checked, will be centered around the Z axis reference point.\nIf unchecked, the corner will be on the reference point and it\nwill extend in the positive z direction.",
#	center_x_coord_ctrl_hint_tooltip = "Shift local X coordinate to the specified location. Used to adjust the\ncenter point after it has been created automatically on a face, but is\nnot where it needs to be.",
#	center_y_coord_ctrl_hint_tooltip = "Shift local Y coordinate to the specified location. Used to adjust the\ncenter point after it has been created automatically on a face, but is\nnot where it needs to be.",
#	chamfer_length_ctrl_hint_tooltip = "Length of the chamfer. Must be > 0.",
#	chamfer_asym_length_ctrl_hint_tooltip = "Can be set to > 0 for an asymmetrical chamfer.",
#	combine_ctrl_hint_tooltip = "Whether this should be combined with other solids on the stack.",
#	corner_kind_ctrl_hint_tooltip = "Use 'arc' for rounded corners, and 'intersection' for sharp corners.",
#	clean_ctrl_hint_tooltip = "Whether to clean the resulting geometry. If the CAD kernel\nis yielding invalid results, try disabling this.",
#	csink_angle_ctrl_hint_tooltip = "Angle of the countersink in degrees (82 is common).",
#	csink_dia_ctrl_hint_tooltip = "Largest diameter of the counter-sink. This diameter\nshould be larger than that of the main hole.",
#	edge_comps_opt_1_hint_tooltip = "Edge filter\nNone = Do not use this filter\nAll = All edges selected\nMaximum (>) = Edge greatest distance from origin along selected axis\nMinimum (<) = Face smallest distance from origin along selected axis\nPositive Normal (+) = Edges aligned in the positive direction with the given axis\nNegative Normal (-) = Edges aligned in the negative direction with the given axis\nParallel (|) = Edges parallel to the given axis\nOrthogonal (#) = Edges orthogonal to the given axis",
#	extra_selector_adder_hint_tooltip = "Add another selector to be combined with the previous.",
#	extrude_both_ctrl_hint_tooltip = "Extrude in both directions symmetrically.",
#	extrude_distance_ctrl_hint_tooltip = "Distance to extrude along the normal of the workplane.",
#	face_comps_opt_1_hint_tooltip = "Face filter\nNone = Do not use this filter\nAll = All faces selected\nMaximum (>) = Face greatest distance from origin along selected axis\nMinimum (<) = Face smallest distance from origin along selected axis\nPositive Normal (+) = Faces with a normal aligned in the positive direction with the given axis\nNegative Normal (-) = Faces with a normal aligned in the negative direction with the given axis\nParallel (|) = Faces with normal parallel to the normal of the workplane\nOrthogonal (#) = Faces with normal orthogonal to normal of the workplane",
#	face_comps_opt_2_hint_tooltip = "Axis filter\nX = X axis of the workplane\nY = Y axis of the workplane\nZ = Z axis of the workplane",
#	fillet_radius_ctrl_hint_tooltip = "Radius of the fillet, must be > zero.",
#	for_construction_ctrl_hint_tooltip = "Whether the new wires should be reference geometry only. Check if the\nwires are for reference, uncheck if they are creating part geometry.",
#	hide_show_selector_str = "Toggle to hide or show the raw selector string.",
#	hline_dist_ctrl_hint_tooltip = "X distance from current point.",
#	hlineto_x_coord_ctrl_hint_tooltip = "X coordinate for the end of the line.",
#	hole_dia_ctrl_hint_tooltip = "Diameter of the main hole.",
#	hole_depth_ctrl_hint_tooltip = "Depth of the main hole. Setting to 0 causes it to go all\nthe way through the object it is being placed in.",
#	include_ctrl_hint_tooltip = "Use current point as a starting point of the curve/line.",
#	invert_ctrl_hint_tooltip = "Flip the normal for the operation to the opposite direction.",
#	line_x_dist_ctrl_hint_tooltip = "X distance from the current point.",
#	line_y_dist_ctrl_hint_tooltip = "Y distance from the current point.",
#	lineto_x_dist_ctrl_hint_tooltip = "The X point in workplane plane coordinates.",
#	lineto_y_dist_ctrl_hint_tooltip = "The Y point in workplane plane coordinates.",
#	logic_option_button_hint_tooltip = "Logical operators\nand = Both selectors have to match\nor = Either selector can match",
#	move_x_dist_ctrl_hint_tooltip = "Desired X distance in local coordinates.",
#	move_y_dist_ctrl_hint_tooltip = "Desired Y distance in local coordinates.",
#	moveto_x_dist_ctrl_hint_tooltip = "Desired X location in local coordinates.",
#	moveto_y_dist_ctrl_hint_tooltip = "Desired Y location in local coordinates.",
#	offset2d_thickness_ctrl_hint_tooltip = "Offset thickness. Negative thickness denotes offset to inside.",
#	polar_array_angle_ctrl_hint_tooltip = "The angle (degrees) to fill with elements. A positive value will\nfill in the counter-clockwise direction. If fill is false, angle is\nthe angle between elements.",
#	polar_array_count_ctrl_hint_tooltip = "Number of elements in the array (must be > 0).",
#	polar_array_fill_ctrl_hint_tooltip = "Interpret the angle as total if checked.",
#	polar_array_radius_ctrl_hint_tooltip = "Distance away from the center that\nthe array objects will be placed.",
#	polar_array_rotate_ctrl_hint_tooltip = "Rotate every item to be oriented with respect\nto the center of the array.",
#	polar_array_start_angle_ctrl_hint_tooltip = "Starting angle (degrees) of array. 0 degrees is situated along local X-axis.",
#	polar_line_distance_ctrl_hint_tooltip = "Distance of the end of the line from the current point.",
#	polar_line_angle_ctrl_hint_tooltip = "Angle of the vector to the end of the line with respect\nto the X-axis.",
#	polar_line_to_distance_ctrl_hint_tooltip = "Distance of the end of the line from the origin.",
#	polygon_dia_ctrl_hint_tooltip = "Size of the circle the polygon is inscribed into.",
#	polygon_nsides_ctrl_hint_tooltip = "Number of sides, must be > 3.",
#	polyline_tuple_x_ctrl_hint_tooltip = "X point coordinate in workplane coordinates.",
#	polyline_tuple_y_ctrl_hint_tooltip = "Y point coordinate in workplane coordinates.",
#	push_points_point_lr_ctrl_hint_tooltip = "X coordinate of point to push onto the stack.",
#	push_points_point_tb_ctrl_hint_tooltip = "Y coordinate of point to push onto the stack.",
#	radius_arc_end_point_x_ctrl_hint_tooltip = "X coordinate of the end point for the arc.",
#	radius_arc_end_point_y_ctrl_hint_tooltip = "Y coordinate of the end point for the arc.",
#	radius_arc_radius_ctrl_hint_tooltip = "Radius of the arc between start point and end point.",
#	radius_ctrl_hint_tooltip = "Radius of the circle.",
#	rarray_x_count_ctrl_hint_tooltip = "Number of X points (must be > 0).",
#	rarray_y_count_ctrl_hint_tooltip = "Number of Y points (must be > 0).",
#	rarray_x_spacing_ctrl_hint_tooltip = "Spacing between points in the x direction ( must be > 0).",
#	rarray_y_spacing_ctrl_hint_tooltip = "Spacing between points in the y direction ( must be > 0).",
#	rect_x_length_ctrl_hint_tooltip = "Length in X direction (in workplane coordinates).",
#	rect_y_length_ctrl_hint_tooltip = "Length in Y direction (in workplane coordinates).",
#	rect_centered_ctrl_hint_tooltip = "If checked, the rectangle will be centered around the reference point.\nIf unchecked, the corner of the rectangle will be on the reference point\nand it will extend in the positive x and y directions.",
#	revolve_angle_ctrl_hint_tooltip = "Angle to revolve through. Anything less than 360 degrees will leave the shape open.",
#	revolve_axis_start_x_ctrl_hint_tooltip = "X start point of the axis of rotation.",
#	revolve_axis_start_y_ctrl_hint_tooltip = "Y start point of the axis of rotation.",
#	revolve_axis_start_z_ctrl_hint_tooltip = "Z start point of the axis of rotation.",
#	revolve_axis_end_x_ctrl_hint_tooltip = "X end point of the axis of rotation.",
#	revolve_axis_end_y_ctrl_hint_tooltip = "Y end point of the axis of rotation.",
#	revolve_axis_end_z_ctrl_hint_tooltip = "Z end point of the axis of rotation.",
#	rotate_axis_start_x_ctrl_hint_tooltip = "X point of the first axis of rotation.",
#	rotate_axis_start_y_ctrl_hint_tooltip = "Y point of the first axis of rotation.",
#	rotate_axis_start_z_ctrl_hint_tooltip = "Z point of the first axis of rotation.",
#	rotate_about_center_axis_end_x_ctrl_hint_tooltip = "X point of the second axis of rotation.",
#	rotate_about_center_axis_end_y_ctrl_hint_tooltip = "Y point of the second axis of rotation.",
#	rotate_about_center_axis_end_z_ctrl_hint_tooltip = "Z point of the second axis of rotation.",
#	rotate_angle_ctrl_hint_tooltip = "Rotation angle in degrees.",
#	sagitta_arc_end_point_x_ctrl_hint_tooltip = "X end point for the arc.",
#	sagitta_arc_end_point_y_ctrl_hint_tooltip = "Y end point for the arc.",
#	sagitta_arc_sag_ctrl = "Perpendicular distance from arc center to arc baseline.",
#	section_height_ctrl_hint_tooltip = "Height to slice an object at along the workplane normal.",
#	selector_hide_show_wp_btn_hint_tooltip = "Adds a workplane to the selected geometry.",
#	shell_thickness_ctrl_hint_tooltip = "Wall thickness of the desired shell. Negative values shell\ninwards, positive values shell outwards.",
#	slot_angle_ctrl_hint_tooltip = "Angle of the slot in degrees, with 0 being along X-axis.",
#	slot_diameter_ctrl_hint_tooltip = "Diameter, or width, of the slot.",
#	slot_length_ctrl_hint_tooltip = "End to end length of slot.",
#	sphere_angle1_ctrl_hint_tooltip = "First angle to sweep the sphere arc through.",
#	sphere_angle2_ctrl_hint_tooltip = "Second angle to sweep the sphere arc through.",
#	sphere_angle3_ctrl_hint_tooltip = "Third angle to sweep the sphere arc through.",
#	sphere_direct_x_ctrl_hint_tooltip = "X component of the direction axis for the creation of the sphere.",
#	sphere_direct_y_ctrl_hint_tooltip = "Y component of the direction axis for the creation of the sphere.",
#	sphere_direct_z_ctrl_hint_tooltip = "Z component of the direction axis for the creation of the sphere.",
#	sphere_radius_ctrl_hint_tooltip = "Radius of the sphere.",
	spline_add_tan_btn_hint_tooltip = "Adds the current pair to the tangents list.",
	spline_delete_tan_btn_hint_tooltip = "Removes the selected pair from the tangents list.",
	spline_add_tuple_btn_hint_tooltip = "Adds the current pair to the points list.",
	spline_delete_tuple_btn_hint_tooltip = "Removes the selected pair from the points list.",
	spline_periodic_ctrl_hint_tooltip = "Enable creation of periodic curves.",
	spline_tan_x_ctrl_hint_tooltip = "X component of a vector specifying the direction of the tangent to the\ncurve at each of the specified interpolation points.",
	spline_tan_y_ctrl_hint_tooltip = "Y component of a vector specifying the direction of the tangent to the\ncurve at each of the specified interpolation points.",
	spline_tuple_x_ctrl_hint_tooltip = "X point to interpolate the spline through.",
	spline_tuple_y_ctrl_hint_tooltip = "Y point to interpolate the spline through.",
	split_keep_bottom_ctrl_hint_tooltip = "Checked to keep the bottom, unchecked to discard it.",
	split_keep_top_ctrl_hint_tooltip = "Checked to keep the top, unchecked to discard it.",
	tangent_arc_end_point_x_ctrl_hint_tooltip = "X point for the arc to end at.",
	tangent_arc_end_point_y_ctrl_hint_tooltip = "Y point for the arc to end at.",
	tangent_arc_relative_ctrl_hint_tooltip = "Checked if the endpoint is specified relative to the current point,\nunchecked if endpoint is in workplane coordinates.",
	taper_ctrl_hint_tooltip = "Angle for optional tapered extrusion.",
	text_cut_ctrl_hint_tooltip = "Checked to cut the resulting solid from the parent solids, if found.",
	text_distance_ctrl_hint_tooltip = "Distance to extrude, normal to the workplane.",
	text_font_size_ctrl_hint_tooltip = "Size of the font, in model units.",
	text_font_ctrl_hint_tooltip = "Font name.",
	text_font_kind_ctrl_hint_tooltip = "Font type.",
	text_font_path_ctrl_hint_tooltip = "Path to a custom font file.",
	text_halign_ctrl_hint_tooltip = "Horizontal alignment.",
	text_valign_ctrl_hint_tooltip = "Vertical alignment.",
	text_txt_ctrl_hint_tooltip = "Text to be rendered.",
	three_point_arc_point_1_x_ctrl_hint_tooltip = "X point to draw the arc through.",
	three_point_arc_point_1_y_ctrl_hint_tooltip = "Y point to draw the arc through.",
	three_point_arc_point_2_x_ctrl_hint_tooltip = "X end point for the arc.",
	three_point_arc_point_2_y_ctrl_hint_tooltip = "Y end point for the arc.",
	translate_vec_x_ctrl_hint_tooltip = "X distance to move in global coordinates.",
	translate_vec_y_ctrl_hint_tooltip = "Y distance to move in global coordinates.",
	translate_vec_z_ctrl_hint_tooltip = "Z distance to move in global coordinates.",
	twist_extrude_angle_ctrl_hint_tooltip = "Angle (in degrees) to rotate through during the extrusion.",
	twist_extrude_distance_ctrl_hint_tooltip = "Distance to extrude normal to the workplane.",
	vertex_comps_opt_1_hint_tooltip = "Vertex filter\nNone = Do not use this filter\nAll = All vertices selected\nMaximum (>) = Vertex greatest distance from origin along selected axis\nMinimum (<) = Vertex smallest distance from origin along selected axis",
	vline_dist_ctrl_hint_tooltip = "Y distance from current point.",
	vline_to_y_coord_ctrl_hint_tooltip = "Y coordinate for the end of the line.",
	wedge_dir_x_ctrl_hint_tooltip = "X component of a direction vector for the major axis of the wedge.",
	wedge_dir_y_ctrl_hint_tooltip = "Y component of a direction vector for the major axis of the wedge.",
	wedge_dir_z_ctrl_hint_tooltip = "Z component of a direction vector for the major axis of the wedge.",
	wedge_dx_ctrl_hint_tooltip = "Distance along the X axis.",
	wedge_dy_ctrl_hint_tooltip = "Distance along the Y axis.",
	wedge_dz_ctrl_hint_tooltip = "Distance along the Z axis.",
	wedge_pnt_x_ctrl_hint_tooltip = "X component of an origin vector of the direction for the wedge.",
	wedge_pnt_y_ctrl_hint_tooltip = "Y component of an origin vector of the direction for the wedge.",
	wedge_pnt_z_ctrl_hint_tooltip = "Z component of an origin vector of the direction for the wedge.",
	wedge_xmin_ctrl_hint_tooltip = "Minimum X location.",
	wedge_zmin_ctrl_hint_tooltip = "Minimum Z location.",
	wedge_xmax_ctrl_hint_tooltip = "Maximum X location.",
	wedge_zmax_ctrl_hint_tooltip = "Maximum Z location.",
	wp_cen_ctrl_hint_tooltip = "How the local origin of the workplane is determined. CenterOfBoundBox chooses the\ncenter of the smallest box that the geometry will fit inside of. CenterOfMass is essentially\nthe center of gravity of the geometry, and varies dependeing on whether material is added\nor removed from an object, and whether that material is removed asymmetrically.\nProjectedOrigin projects the center of the old workplane onto the workplane that is being\ncreated.",
	wp_ctrl_hint_tooltip = "Which axes are used to define the workplane.",
	wp_xdir_x_ctrl_hint_tooltip = "X component of the X direction of the workplane.",
	wp_xdir_y_ctrl_hint_tooltip = "Y component of the X direction of the workplane.",
	wp_xdir_z_ctrl_hint_tooltip = "Z component of the X direction of the workplane.",
	wp_hide_show_btn_hint_tooltip = "Shows advanced workplane controls.",
	wp_name_ctrl_hint_tooltip = "Name to apply to this component/workplane.",
	wp_normal_x_ctrl_hint_tooltip = "X component of the normal vector for the workplane.",
	wp_normal_y_ctrl_hint_tooltip = "Y component of the normal vector for the workplane.",
	wp_normal_z_ctrl_hint_tooltip = "Z component of the normal vector for the workplane.",
	wp_offset_ctrl = "Offset distance of the workplane in the direction of the normal.",
	wp_origin_x_ctrl_hint_tooltip = "X point of the origin of the workplane.",
	wp_origin_y_ctrl_hint_tooltip = "Y point of the origin of the workplane.",
	wp_origin_z_ctrl_hint_tooltip = "Z point of the origin of the workplane.",

	open_button_hint_tooltip = "Open a CadQuery component file.",
	save_button_hint_tooltip = "Save the current component, allows Save-as.",
	make_button_hint_tooltip = "Export the current component for manufacturing.",
	reload_button_hint_tooltip = "Manually reload the current CadQuery script.",
	close_button_hint_tooltip = "Close the currently open component.",
	home_view_button_hint_tooltip = "Move the camera back to the home position.",
	about_button_hint_tooltip = "Show information about Semblage.",

	workplane_button_hint_tooltip = "Workplane operations",
	three_d_button_hint_tooltip = "3D operations",
	sketch_button_hint_tooltip = "2D sketch operations",
	selector_button_hint_tooltip = "Selector operations",
	add_button_hint_tooltip = "Adds the selected operation to the list and renders the result.",
	update_button_hint_tooltip = "Updates the render with the current state of the operation list.",
	delete_button_hint_tooltip = "Removes the currently selected operation from the list.",
	move_up_button_hint_tooltip = "Moves the currently selected operation up in the list.",
	move_down_button_hint_tooltip = "Moves the currently selected operation down in the list.",

	workplane_tooltip = "Defines a coordinate system in space in which 2-d coordinates can be used.\nOther geometry and features are placed within this workplane. Start here when\ncreating a new component.",
	center_tooltip = "Shifts the local coordinates to the specified location.\nThe location is specified in terms of local coordinates.\nThe current point is set to the new center. This method\nis useful to adjust the center point after it has been\ncreated automatically on a face, but not where you\nwould like it to be.",
	rotate_tooltip = "Returns a copy of all of the items on the stack rotated through\nan angle around the axis of rotation.",
	rotate_about_center_tooltip = "Rotates all items on the stack by the specified angle, about the\nspecified axis. The center of rotation is a vector starting at the\ncenter of the object on the stack, and ended at the specified point.",
	translate_tooltip = "Returns a copy of all of the items on the stack\nmoved by the specified translation vector.",
	cut_blind_tooltip = "Uses all un-extruded wires in the parent chain to create a prismatic cut from\nexisting solid. Similar to extrude, except that a solid in the parent chain is\nrequired to remove material from. cutBlind always removes material from\na component.",
	box_tooltip = "Returns a 3D box with specified dimensions for each point on the stack.",
	chamfer_tooltip = "Chamfers all selected edges on a solid.",
	cbore_hole_tooltip = "Makes a counter-bored hole for each point on the stack. The surface\nof the hole is at the current workplane plane.",
	csk_hole_tooltip = "Makes a counter-sunk hole for each point on the stack. The surface of\nthe hole is at the current workplane.",
	extrude_tooltip = "Uses all un-extruded wires in the parent chain to create a prismatic\nsolid. extrude always adds material to a component.",
	fillet_tooltip = "Fillets all selected edges on a solid. A radius that is too large may\nresult in CAD kernel errors and invalid geometry.",
	hole_tooltip = "Makes a hole for each point on the stack. The surface of the\nhole is at the current workplane.",
	revolve_tooltip = "Uses all un-revolved wires in the parent chain to create a solid by rotating\nthe wires through the specified angle.",
	section_tooltip = "Slices current solid at the given height.",
	shell_tooltip = "Removes the selected faces to create a shell of the specified thickness.\nTo shell, first create a solid, and in the same chain select the faces you\nwish to remove.",
	sphere_tooltip = "Makes a 3D sphere with the specified radius for each point on the stack.",
	split_tooltip = "Splits a solid on the stack into two parts, optionally keeping\nthe separate parts. The most common operation splits a solid\nand keeps one half.",
	text_tooltip = "Creates the specified 3D text.",
	thru_cut_tooltip = "Uses all un-extruded wires in the parent chain to create a prismatic\ncut from existing solid. Cuts through all material in both normal\ndirections of the workplane. Always removes material from a part.",
	twist_extrude_tooltip = "Extrudes a wire in the direction normal to the plane, but also twists by the specified\nangle over the length of the extrusion. The center point of the rotation will be the\ncenter of the workplane. See extrude for more details, since this method is the same\nexcept for the addition of the angle. In fact, if angle=0, the result is the same as a\nlinear extrude.",
	wedge_tooltip = "One wedge is created for each point on the current stack. If no\npoints are on the stack, one wedge using the current workplane\ncenter is created.",
	circle_tooltip = "Makes a circle for each point on the stack.",
	close_tooltip = "Ends 2D construction, and attempt to build a closed wire. When a\nset of edges is closed, CadQuery assumes it is safe to build the\ngroup of edges into a wire.",
	ellipse_arc_tooltip = "Draws an elliptical arc with X and Y radiuses either with\nstart point at current point or with the current point being\nthe center of the arc.",
	ellipse_tooltip = "Makes an ellipse for each point on the stack.",
	hline_tooltip = "Makes a horizontal line from the current point to the provided distance.",
	hline_to_tooltip = "Makes a horizontal line from the current point to the provided\nX coordinate. Useful if it is more convenient to specify the end\nlocation rather than a distance.",
	line_tooltip = "Makes a line from the current point to the provided point, using\ndimensions relative to the current point.",
	line_to_tooltip = "Makes a line from the current point to the provided point.",
	mirror_x_tooltip = "Mirrors entities around the X axis of the workplane. Typically used to\nmake creating wires with symmetry easier.",
	mirror_y_tooltip = "Mirrors entities around the Y axis of the workplane. Typically used to\nmake creating wires with symmetry easier.",
	move_tooltip = "Moves the specified distance from the current point, without drawing. Not to\nbe confused with center, which moves the center of the entire workplane. This\nmethod only moves the current point and therefore does not affect objects\nalready drawn.",
	move_to_tooltip = "Moves to the specified point, without drawing. Not to be confused with\ncenter, which moves the center of the entire workplane. This method\nonly moves the current point and therefore does not affect objects\nalready drawn.",
	offset_2d_tooltip = "Creates a 2D offset of an existing wire.",
	polar_array_tooltip = "Creates an polar array of points and pushes them onto the stack. The 0 degree\nreference angle is located along the local X axis.",
	polar_line_tooltip = "Makes a line of the given length, at the given angle, from the current point.",
	polar_line_to_tooltip = "Makes a line from the current point to the given polar co-ordinates. Useful if it is more\nconvenient to specify the end location rather than the distance and angle from the\ncurrent point.",
	polygon_tooltip = "Creates a polygon inscribed in a circle of the specified diameter for each point\non the stack. The first vertex is always oriented in the x direction.",
	polyline_tooltip = "Creates a polyline from a list of points.",
	push_points_tooltip = "Pushes a list of points onto the stack as vertices. The points are in the 2D\ncoordinate space of the workplane face. A common use is to provide a list\nof points for a subsequent operation, such as creating circles or holes.",
	radius_arc_tooltip = "Draws an arc from the current point to the endpoint with an arc defined by the radius. Given that\na closed contour is drawn clockwise, a positive radius means convex arc and negative radius\nmeans concave arc.",
	rarray_tooltip = "Creates an array of points and pushes them onto the stack. If you want to position the\narray at another point, create another workplane that is shifted to the position you would\nlike to use as a reference.",
	rect_tooltip = "Makes a rectangle at each point on the stack.",
	sagitta_arc_tooltip = "Draws an arc from the current point to the endPoint with an arc defined by the sag (sagitta). The\nsagitta is the distance from the center of the arc to the arc base. Given that a closed contour\nis drawn clockwise, a positive sagitta means convex arc and negative sagitta means concave arc.",
	slot_tooltip = "Creates a rounded slot for each point on the stack.",
	spline_tooltip = "Creates a spline interpolated through the provided points. The spline will begin at\nthe current point, and end with the last point in the XY tuple list.",
	tangent_arc_point_tooltip = "Draws an arc as a tangent from the end of the current edge to the endpoint.",
	three_point_arc_tooltip = "Draws an arc from the current point, through point1, and ending at point2.",
	vline_tooltip = "Makes a vertical line from the current point to the provided distance.",
	vline_to_tooltip = "Makes a vertical line from the current point to the provided\nX coordinate. Useful if it is more convenient to specify the end\nlocation rather than a distance."
}


static func get_tts():
	# Select the appropriate tool tips for the language
	if selected_lang == "english":
		return tool_tips_english
